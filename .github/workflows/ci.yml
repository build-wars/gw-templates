# https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions
# https://github.com/sebastianbergmann/phpunit/blob/main/.github/workflows/ci.yaml

# https://github.com/actions/checkout
# https://github.com/actions/upload-artifact
# https://github.com/shivammathur/setup-php
# https://github.com/ramsey/composer-install
# https://github.com/codecov/codecov-action
# https://github.com/codacy/codacy-coverage-reporter-action
# https://github.com/JamesIves/github-pages-deploy-action
# https://github.com/stefanzweifel/git-auto-commit-action

on:
  push:
    branches:
      - main
    tags:
      - "*.*.*"
  pull_request:
    branches:
      - main

name: "Continuous Integration"

env:
  PHP_EXTENSIONS: sodium
  PHP_INI_VALUES: memory_limit=-1, error_reporting=-1, display_errors=On

jobs:

  static-code-analysis:
    name: "Static Code Analysis"
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      matrix:
        php-version:
          - "8.1"
          - "8.2"
          - "8.3"

    env:
      PHAN_ALLOW_XDEBUG: 0
      PHAN_DISABLE_XDEBUG_WARN: 1

    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Install PHP"
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: ast, ${{ env.PHP_EXTENSIONS }}
          ini-values: ${{ env.PHP_INI_VALUES }}
          coverage: none

      - name: "Validate composer.json"
        run: composer validate --ansi --strict

      - name: "Install dependencies with composer"
        uses: ramsey/composer-install@v3

      - name: "Run phan"
        run: php vendor/bin/phan --target-php-version=${{ matrix.php-version }}


  tests:
    name: "Unit Tests"
    needs: static-code-analysis
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
        php-version:
          - "8.1"
          - "8.2"
          - "8.3"

    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Install PHP with extensions"
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          ini-values: ${{ env.PHP_INI_VALUES }}
          coverage: pcov

      - name: "Install dependencies with composer"
        uses: ramsey/composer-install@v3

      - name: "Run tests with phpunit"
        run: php vendor/bin/phpunit --colors=always --configuration=phpunit.xml.dist

      - name: "Send code coverage report to Codecov.io"
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: .build/coverage/clover.xml


  build-js:
    name: "Build (Javascript)"
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: "checkout sources"
        uses: actions/checkout@v4

      - name: "install dependencies"
        run: npm install

      - name: "run eslint"
        run: npm run lint

      - name: "run mocha tests (with coverage)"
        run: npm run test-with-coverage

      - name: "build"
        run: npm run build

      - name: "build-src"
        run: npm run build-src

      - name: "send code coverage report to codecov.io"
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: .build/coverage-js/clover.xml

      - name: "upload artifacts"
        uses: actions/upload-artifact@v4
        with:
          name: gw-skilldata-${{ github.sha }}
          path: ./dist

      - name: "Attach file(s) to release"
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            dist/gw-skilldata-es6-src.js
            dist/gw-skilldata-node-src.cjs
            dist/gw-templates-amd.js
            dist/gw-templates-es6.js
            dist/gw-templates-iife.js
            dist/gw-templates-node.cjs
